#DEBUG，INFO，WARN，ERROR，FATAL
#附：Pattern参数的格式含义
#%c 输出日志信息所属的类的全名
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2013-8-19- 22：10：28
#%f 输出日志信息所属的类的类名
#%l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行
#%m 输出代码中指定的信息，如log(message)中的message
#%n 输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n”
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
#%r 输出自应用启动到输出该日志信息所耗费的毫秒数
#%t 输出产生该日志事件的线程名

### set log levels ###
log4j.rootLogger = info , C , D , E

### 输出到控制台 ###
log4j.appender.C = org.apache.log4j.ConsoleAppender
log4j.appender.C.Target = System.out
log4j.appender.C.layout = org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %-5p [%t] %c.%M(%L) - %m%n

### 输出到日志文件 ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = F:/cygwin/home/xdrodger/logs/wsf.log 
log4j.appender.D.File.MaxFileSize=1MB  
log4j.appender.D.Append = true
log4j.appender.D.Threshold = DEBUG ## 输出DEBUG级别以上的日志
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n

### 保存异常信息到单独文件 ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File = F:/cygwin/home/xdrodger/logs/wsf-error.log
log4j.appender.E.File.MaxFileSize=1MB  
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR ## 只输出ERROR级别以上的日志!!!
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n
